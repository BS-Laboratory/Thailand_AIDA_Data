# Data management for AIDA DATA

## Load packages and data

```{r}
library(epicalc)
library(foreign)
library(dplyr)
library(readxl)
library(plyr)
library(tibble)
library(reshape2)
library(xlsx)


Sys.setlocale(locale = "Thai")
imp.temp <- read.csv("ThailandAIDAData_ImportTemplate_2021-04-02.csv", header = T)
scr.dat <- read_excel("Siriraj-AIDA Screening (Sample Responses).xlsx", skip = 0, sheet = 1)
scs.dat <- read_excel("SCS datasheet.xlsx", skip = 0, sheet = 1)

```

## Cleaning screening data

### Renaming variables of screening dataset

```{r}
str(scr.dat)
colnames(scr.dat)
imp.col.scr1 <- colnames(imp.temp[2:23])
```
Replace the column names from google form data with ones from data import tool

```{r}
names(scr.dat) <- imp.col.scr1
colnames(scr.dat)
```

### Revalue the level of variables from screening dataset

```{r}
yn <- c("ใช่","ไม่ใช่")
hv <- c("เคย","ไม่เคย")

scr.dat[,2:22] <- as.data.frame(sapply(scr.dat[,2:22],
                                       mapvalues, from = yn, to = c(1,0)))
scr.dat[,2:22] <- as.data.frame(sapply(scr.dat[,2:22],
                                       mapvalues, from = hv, to = c(1,0)))
```

Check the modified values
```{r}
scr.dat[,1:3]
scr.dat[,6:12]
```

```{r}
scr.dat[,12:15] <- as.data.frame(ifelse(scr.dat[,12:15]=="ไม่ได้รับประทาน",0,1))
```
Check the modified value

```{r}
scr.dat[,11:15]
```

Deal with the "ไม่มี" in these 2 variables. Final format will depend on the decision made in the next meeting

```{r}
scr.dat[,16:17] <- as.data.frame(sapply(scr.dat[,16:17],
                                     mapvalues, from = "ไม่มี", to = NA))
scr.dat[,12:17]
```

Modified sex value
```{r}
scr.dat$sex_sc <- ifelse(scr.dat$sex_sc=="ชาย",1,2) 
colnames(scr.dat)
```

Screening Data is cleaned.

Back up data in rds format

```{r}
saveRDS(scr.dat,"cleaned scr.rds")
scr.dat <- readRDS("cleaned scr.rds")
```

Screening data is ready to import to REDCap template.


## Cleaning single cell sequencing data

### Renaming variables of sequencing data

```{r}
str(scs.dat)
colnames(scs.dat[1:21])
colnames(imp.temp[25:53])
```
Replace the column names from google form data with ones from data import tool.

```{r}
imp.col.scr2 <- colnames(imp.temp[25:53])

colnames(scs.dat)[1:29]  <- imp.col.scr2
colnames(scs.dat)
```

Generate columns for dx_disease to match REDCap template.

Changing variable name for dcast command.
```{r}
names(scs.dat)[30] <- "dxnosis"
colnames(scs.dat)
```

Generating columns based on the level obtained
```{r}
add.diag.new <-  as.data.frame(dcast(unique(scs.dat), scs.dat$hn ~ scs.dat$dxnosis, length, value.var="dxnosis"))
colnames(add.diag.new)
```

These commands are for channing the name of obtained levels to match the template
```{r}
names(add.diag.new)[names(add.diag.new) == "ไม่เคยได้รับการวินิจฉัยว่าเป็นโรคข้างต้น"] <- "dx_disease___0"
names(add.diag.new)[names(add.diag.new) == "โรคอัมพาตหรือโรคสมองขาดเลือด"] <- "dx_diseae___1"
names(add.diag.new)[names(add.diag.new) == "โรคไขมันในเลือดสูง (ไขมันในเลือดสูง/ ระดับคอเลสเทอรอล HDL ต่า)"] <- "dx_disease___2"
names(add.diag.new)[names(add.diag.new) == "โรคความดันโลหิตสูง"] <- "dx_disease___3"
names(add.diag.new)[names(add.diag.new) == "โรคเบาหวานหรือน้าตาลในเลือดสูง"] <- "dx_disease___4"
names(add.diag.new)[names(add.diag.new) == "โรคหัวใจ (ลิ้นหัวใจรั่ว/ หัวใจล้มเหลว อื่น ๆ )"] <- "dx_disease___5"
names(add.diag.new)[names(add.diag.new) == "ภาวะหัวใจขาดเลือด"] <- "dx_disease___6"
names(add.diag.new)[names(add.diag.new) == "ภาวะหัวใจเต้นผิดจังหวะ"] <- "dx_disease___7"
names(add.diag.new)[names(add.diag.new) == "ภาวะกล้ามเนื้อหัวใจตาย"] <- "dx_disease___8"
names(add.diag.new)[names(add.diag.new) == "โรคตับจากแอลกอฮอล์"] <- "dx_disease___9"
names(add.diag.new)[names(add.diag.new) == "โรคแผลในกระเพาะอาหาร"] <- "dx_disease___10"
names(add.diag.new)[names(add.diag.new) == "นิ่วในถุงน้าดี"] <- "dx_disease___11"
names(add.diag.new)[names(add.diag.new) == "โรคเกาต์"] <- "dx_disease___12"
names(add.diag.new)[names(add.diag.new) == "โรคกระดูกพรุน"] <- "dx_disease___13"
names(add.diag.new)[names(add.diag.new) == "โรคปริทันต์อักเสบ"] <- "dx_disease___14"
names(add.diag.new)[names(add.diag.new) == "โรคแพ้ภูมิตนเอง"] <- "dx_disease___15"
colnames(add.diag.new)
```

For ordering multiple choice diagnosis variable
```{r}
#add.diag.new <- add.diag.new[,c(5,16,8,9,11,15,3,4,2,10,13,1,7,6,12,14)]
```

```{r}
add.diag.new
des(scs.dat)
```

Delete the google format column and merge the newly generated ones in to screening dataset
```{r}
scs.dat <- scs.dat[,-30]
scs.dat <- cbind(scs.dat[1:29],add.diag.new,scs.dat[30:38])
scs.dat <- scs.dat[,-30]
des(scs.dat)
```

Changing the rest of column names
```{r}
imp.col.scr3 <- colnames(imp.temp[72:78])
colnames(scs.dat)[31:37]  <- imp.col.scr3
colnames(scs.dat)
```

Generate columns for dx_disease to match REDCap template.

Changing variable name for dcast command.

```{r}
names(scs.dat)[38] <- "drug.horm"
colnames(scs.dat)
```


Generating columns based on the level obtained
```{r}
add.diag.new2 <-  as.data.frame(dcast(unique(scs.dat), scs.dat$hn ~ scs.dat$drug.horm, length, value.var="drug.horm"))
colnames(add.diag.new2)
```

These commands are for channing the name of obtained levels to match the template
```{r}
names(add.diag.new2)[names(add.diag.new2) == "ไม่ได้รับประทานยาใดๆ"] <- "taking_hormones___0"
names(add.diag.new2)[names(add.diag.new2) == "โกรทฮอร์โมน"] <- "taking_hormones___1"
names(add.diag.new2)[names(add.diag.new2) == "ฮอร์โมนอินซูลิน/ ยาโรคเบาหวาน"] <- "taking_hormones___2"
names(add.diag.new2)[names(add.diag.new2) == "ผลิตภัณฑ์ยาจากพลาสมา"] <- "taking_hormones___3"
names(add.diag.new2)[names(add.diag.new2) == "อื่น ๆ (ยาแผนจีนโบราณ/ ยาอายุรเวท)"] <- "taking_hormones___4"
names(add.diag.new2)[names(add.diag.new2) == "ยานอนหลับ"] <- "taking_hormones___5"
names(add.diag.new2)[names(add.diag.new2) == "ยาลดความดันโลหิต (ยารักษาความดัน/ Diovan/ Renibase)"] <- "taking_hormones___6"
names(add.diag.new2)[names(add.diag.new2) == "ยาสเตียรอยด์"] <- "taking_hormones___7"
names(add.diag.new2)[names(add.diag.new2) == "ยาแก้แพ้ (Allergic drugs/ Antihistamines)"] <- "taking_hormones___8"
names(add.diag.new2)[names(add.diag.new2) == "ยากดภูมิคุ้มกัน"] <- "taking_hormones___9"
names(add.diag.new2)[names(add.diag.new2) == "ยาปฏิชีวนะ"] <- "taking_hormones___10"
names(add.diag.new2)[names(add.diag.new2) == "ยาลดไขมันในเลือด (ยาลดคอเลสเทอรอล ชนิด LDL/ Mevalotin/ ลิปิโอดอล)"] <- "taking_hormones___11"
colnames(add.diag.new2)
```

Delete the google format column and merged the new columns

```{r}
scs.dat <- scs.dat[,-38]
scs.dat <- cbind(scs.dat[1:37],add.diag.new2,scs.dat[38])
scs.dat <- scs.dat[,-38]
des(scs.dat)
```

Checking
```{r}
scs.dat[,37:40]
```

Change the last variable name
```{r}
names(scs.dat)[40] <- "taking_hormone_period"
des(scs.dat)
```

### Revalue the levels of variables from sequencing dataset



```{r}
scs.dat$sex <- ifelse(scs.dat$sex=="ชาย",1,2)

hl <- c("รู้สึกอ่อนเพลีย/เหนื่อย ขณะนั่งพัก","ไม่มีอาการใดๆขณะพัก แต่เหนื่อยง่ายสำหรับกิจกรรมเล็กๆน้อยๆในบ้าน",
        "ไม่มีอาการขณะพัก แต่อาจเหนื่อยหอบถ้าต้องเดินขึ้นบรรได เดินซื้ออาหาร","เดินขึ้นบันไดหรือวิ่งระยะสั้นได้")    

scs.dat$health_level <- mapvalues(scs.dat$health_level,from = hl, to = c(1,2,3,4))

scs.dat$health_level

des(scs.dat)

yn <- c("ใช่","ไม่ใช่")
hv <- c("เคย","ไม่เคย")

scs.dat[,9:40] <- as.data.frame(sapply(scs.dat[,9:40],
                                mapvalues, from = yn, to = c(1,0)))
scs.dat[,9:40] <- as.data.frame(sapply(scs.dat[,9:40],
                                       mapvalues, from = hv, to = c(1,0)))

sm <- c("ไม่เคยสูบ","ไม่เคยสูบ","สูบอยู่")

scs.dat$smoking <- mapvalues(scs.dat$smoking,from = sm, to = c(0,1,2))

alc <- c("ไม่เคยดื่มเลย","เลิกดื่มแล้ว",
         "น้อยกว่าเดือนละครั้ง (เช่น 2-3 เดือนครั้ง หรือ นานกว่านั้นต่อครั้ง)","ประมาณเดือนละครั้ง","ดื่มเกือบทุกสัปดาห์","ดื่มมากกว่า 1 ครั้งต่อสัปดาห์")

scs.dat$alcohol <- mapvalues(scs.dat$alcohol, from = alc, to = c(1,2,3,4,5,6))

head(scs.dat)
```

Single Cell Sequence Data is cleaned

SaveRDS as a back up

```{r}
saveRDS(scs.dat,"cleaned scs.rds")
scr.dat <- readRDS("cleaned scr.rds")
```

This file is ready to import to REDCap template

## Merging cleaned data to REDCap template and export
```{r}
dat.ready.imp <- as.data.frame(cbind(scr.dat,scs.dat))

imp.dat <- rbind.fill(imp.temp,dat.ready.imp)

write.xlsx(imp.dat, file = "Data Formated for REDCap Importation.xlsx",
           sheetName = "Sheet 1", append = FALSE)
```

